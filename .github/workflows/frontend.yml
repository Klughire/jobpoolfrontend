name: Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DO_SSH_PRIVATE_KEY }}" | sed 's/\r$//' > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.DO_FRONTEND_IP }} >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no root@${{ secrets.DO_FRONTEND_IP }} "echo 'Connected successfully!'"

      - name: Add GitHub to Known Hosts
        run: ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Deploy application
        run: |
          ssh -i ~/.ssh/id_ed25519 root@${{ secrets.DO_FRONTEND_IP }} 'bash -s' << 'EOF'
            set -e

            export NEXT_PUBLIC_API_BASE_URL="${{ secrets.NEXT_PUBLIC_API_BASE_URL }}"
            export NEXT_PUBLIC_WEBSOCKET_URL="${{ secrets.NEXT_PUBLIC_WEBSOCKET_URL }}"

            mkdir -p /root/frontend
            cd /root/frontend

            if [ ! -d .git ]; then
              git clone git@github.com:Klughire/jobpoolfrontend.git .
            else
              git pull origin main
            fi

            echo "NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}" > app/.env.production
            echo "NEXT_PUBLIC_WEBSOCKET_URL=${NEXT_PUBLIC_WEBSOCKET_URL}" >> app/.env.production
            echo "NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}" > admin/.env.production
            echo "NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}" > .env.production
            echo "NEXT_PUBLIC_WEBSOCKET_URL=${NEXT_PUBLIC_WEBSOCKET_URL}" >> .env.production

            echo "Contents of root .env.production:"
            cat .env.production
            echo "Contents of app/.env.production:"
            cat app/.env.production
            echo "Contents of admin/.env.production:"
            cat admin/.env.production

            if [ -f docker-compose.yml ]; then
              docker-compose down --volumes
              docker-compose rm -f
              docker system prune -af
              docker volume prune -f
              docker-compose up --build -d
            else
              echo "‚ùå Error: docker-compose.yml not found!"
              exit 1
            fi
          EOF
