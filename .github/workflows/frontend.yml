name: Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DO_SSH_PRIVATE_KEY }}" | sed 's/\r$//' > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.DO_FRONTEND_IP }} >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no root@${{ secrets.DO_FRONTEND_IP }} "echo 'Connected successfully!'"

      - name: Add GitHub to Known Hosts
        run: ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Deploy application
        run: |
          ssh -i ~/.ssh/github-actions root@${{ secrets.DO_FRONTEND_IP }} \
            NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }} 'bash -s' << 'EOF'
              set -e
      
              mkdir -p /root/frontend
              cd /root/frontend
      
              if [ ! -d .git ]; then
                git clone git@github.com:DesisMart/frontendapplication.git .
              else
                git pull origin main
              fi
      
              echo "NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}" > code/.env.production
              echo "NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}" > admin/.env.production
              echo "NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}" > .env.production

              # üîç DEBUG: Output contents of .env.production
              echo "Contents of root .env.production:"
              cat .env.production
              echo "Contents of code/.env.production:"
              cat code/.env.production
              echo "Contents of admin/.env.production:"
              cat admin/.env.production
      
              if [ -f docker-compose.yml ]; then
                docker-compose down --volumes
                docker-compose rm -f
                docker system prune -af
                docker volume prune -f
                docker-compose up --build -d
              else
                echo "‚ùå Error: docker-compose.yml not found!"
                exit 1
              fi
          EOF
      
